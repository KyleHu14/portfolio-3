// Next Elements
import Head from "next/head";

// Styles
import styles from "@/styles/pages/Home.module.css";

// Components
import PContainer from "@/components/ProjectContainer";

// Supabase functions
import { fetchProjectInfo } from "@/supabase/supabase";

// This interface is the type of the props that we pass into the home component
interface indexProps {
	data: {
		desc: string;
		id: number;
		title: string;
		github_link: string;
		website_link: string;
		icon_names: string[];
	}[];
}

export default function Home(props: indexProps) {
	return (
		<>
			{/* Header */}
			<Head>
				<title>Kyle Hu</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>

			{/* Main Content */}
			<div className={styles.mainSection}>
				{/* Introduction Section */}
				<div className={styles.intro}>
					<div className={styles.introTitle}>
						Hello! My name is Kyle.
					</div>
					<div className={styles.introDesc}>
						I am an undergraduate student studying Computer Science
						at University of California Irvine. I enjoy web
						development and a fan of NextJS, TypeScript, and
						Supabase.
					</div>
				</div>

				{/* Project Section */}
				<div className={styles.projects}>
					<div className={styles.projTitle}>My Work</div>
					{/* Loop through the projects and display them in containers */}
					{props.data.map((project) => (
						<PContainer
							key={project.id}
							title={project.title}
							desc={project.desc}
							github_link={project.github_link}
							website_link={project.website_link}
							iconNameArray={project.icon_names}
						/>
					))}

					{props.data.length === 0 && (
						<div>
							<div className={styles.errTitle}>
								Something went wrong :(
							</div>
							<div className={styles.errText}>
								Something has went wrong on the backend. I will
								fix this as soon as possible!
							</div>
						</div>
					)}
				</div>
			</div>
		</>
	);
}

// We will first get the data through the fetch project info function before the component above is rendered,
// this prevents a flicker of an empty project container
export async function getServerSideProps() {
	// Fetch data from external API
	const data = await fetchProjectInfo();

	if (data) {
		// Pass data to the page via props
		return { props: { data } };
	}
}
